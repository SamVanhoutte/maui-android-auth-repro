<Project Sdk="Microsoft.NET.Sdk.Razor">

    <PropertyGroup>
        <TargetFrameworks>net7.0-android;net7.0-ios;net7.0-maccatalyst</TargetFrameworks>
        <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net7.0-windows10.0.19041.0</TargetFrameworks>
        <!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
        <!-- <TargetFrameworks>$(TargetFrameworks);net6.0-tizen</TargetFrameworks> -->
        <OutputType>Exe</OutputType>
        <RootNamespace>Sfinx.ClientApp</RootNamespace>
        <UseMaui>true</UseMaui>
        <SingleProject>true</SingleProject>
        <ImplicitUsings>enable</ImplicitUsings>
        <EnableDefaultCssItems>false</EnableDefaultCssItems>

        <!-- Display name -->
        <ApplicationTitle>Sfinx</ApplicationTitle>

        <!-- App Identifier -->
        <ApplicationId>com.sfinxinside.sfinxv1</ApplicationId>
        <ApplicationIdGuid>FEFEB449-024C-41C1-8074-EF8DD528328C</ApplicationIdGuid>
        <ProvisioningType>automatic</ProvisioningType>

        <!-- Versions -->
        <ApplicationDisplayVersion>3.20.4</ApplicationDisplayVersion>
        <ApplicationVersion>54</ApplicationVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">14.2</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">14.0</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">24.0</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
        <Configurations>Debug;Release</Configurations>
        <Platforms>AnyCPU</Platforms>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
        <CodesignKey>iPhone Developer</CodesignKey>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net7.0-ios|AnyCPU'">
<!--        <RuntimeIdentifier>ios-arm64</RuntimeIdentifier>-->
        <RuntimeIdentifier>iossimulator-arm64</RuntimeIdentifier>
    </PropertyGroup>


    <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net7.0-ios|AnyCPU'">
        <CreatePackage>false</CreatePackage>
        <MtouchDebug>true</MtouchDebug>
        <CodesignEntitlements>Platforms\iOS\Entitlements.plist</CodesignEntitlements>
        <CodesignKey>Apple Development: sam.vanhoutte@sfinxinside.com (93TR8CGHJY)</CodesignKey>
        <CodesignProvision>Automatic</CodesignProvision>
    </PropertyGroup>

    <PropertyGroup Condition="$(TargetFramework.Contains('-ios')) and '$(Configuration)' == 'Release'">
        <RuntimeIdentifier>ios-arm64</RuntimeIdentifier>
        <CodesignKey>iPhone Distribution: Sam Marc D Vanhoutte (G347HSMPP5)</CodesignKey>
        <CodesignProvision>Sfinx v1 provisioning</CodesignProvision>
        <CodesignEntitlements>Platforms\iOS\Entitlements.plist</CodesignEntitlements>
        <ArchiveOnBuild>true</ArchiveOnBuild>
        <TcpPort>58181</TcpPort>
        <MtouchLink>SdkOnly</MtouchLink>
        <UseInterpreter>True</UseInterpreter>
    </PropertyGroup>
    

    <PropertyGroup Condition="$(TargetFramework.Contains('-android')) and '$(Configuration)' == 'Release'">
        <RunAOTCompilation>false</RunAOTCompilation>
        <PublishTrimmed>false</PublishTrimmed>
        <AndroidDexTool>d8</AndroidDexTool>
        <AndroidKeyStore>True</AndroidKeyStore>
        <AndroidSigningKeyStore>myapp.keystore</AndroidSigningKeyStore>
        <AndroidSigningKeyAlias>key</AndroidSigningKeyAlias>
        <AndroidSigningKeyPass>SfinxInside</AndroidSigningKeyPass>
        <AndroidSigningStorePass>SfinxInside</AndroidSigningStorePass>
    </PropertyGroup>
    
    <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net7.0-ios|AnyCPU'">
        <CreatePackage>false</CreatePackage>
    </PropertyGroup>

    <ItemGroup>
        <!-- App Icon -->
        <MauiIcon Include="Resources\AppIcon\appicon.svg">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </MauiIcon>

        <!-- Splash Screen -->
        <MauiSplashScreen Include="Resources\Splash\sfinxsplash.svg" Color="#132040" BaseSize="128,128" />

        <!-- Images -->
        <MauiFont Include="Resources\Fonts\*" />

        <!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
        <MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Sfinx.App.Shared\Sfinx.App.Shared.csproj" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="CommunityToolkit.Maui" Version="5.2.0" />
        <PackageReference Include="Flurl" Version="3.0.7" />
        <PackageReference Include="Microsoft.AspNetCore.Components.Authorization" Version="6.0.13" />
        <PackageReference Include="Microsoft.Extensions.Http" Version="7.0.0" />
        <PackageReference Include="Microsoft.Identity.Client" Version="4.47.0" />
        <PackageReference Include="MudBlazor" Version="6.4.1" />
        <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="6.25.1" />
    </ItemGroup>

    <ItemGroup>
        <None Remove="Interfaces\" />
        <None Remove="Services\Security\" />
    </ItemGroup>
    <ItemGroup>
        <Folder Include="Interfaces" />
        <Folder Include="Interfaces\" />
        <Folder Include="Services\Security\" />
        <Folder Include="wwwroot\images\vendors\" />
    </ItemGroup>
    <ItemGroup>
        <Content Remove="appsettings.json" />
        <Content Remove="appsettings.Development.json" />
        <Content Remove="wwwroot\images\vendors\danalock\logo-square.png" />
        <Content Remove="wwwroot\images\vendors\nuki\logo-square.png" />
        <Content Remove="wwwroot\images\vendors\yale\logo-square.png" />
        <Content Remove="wwwroot\images\vendors\" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="appsettings.json" Condition="'$(ExcludeConfigFilesFromBuildOutput)'!='true'">
            <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </EmbeddedResource>
        <EmbeddedResource Include="appsettings.Development.json" Condition="'$(ExcludeConfigFilesFromBuildOutput)'!='true'">
            <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </EmbeddedResource>
    </ItemGroup>
    <ItemGroup>
        <BundleResource Include="wwwroot\images\vendors\danalock\logo-square.png">
            <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </BundleResource>
        <BundleResource Include="wwwroot\images\vendors\nuki\logo-square.png">
            <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </BundleResource>
        <BundleResource Include="wwwroot\images\vendors\yale\logo-square.png">
            <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </BundleResource>
    </ItemGroup>
</Project>
